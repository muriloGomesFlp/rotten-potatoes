# This is a basic workflow to help you get started with Actions

name: CI-CD #(nome do workflow)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch - definição dos eventos que irão startar o workflow
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab - Permite a execução manual do workflow, usado quando for melhorando a pipline.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  CI: #esse é um job, o build.
    # The type of runner that the job will run on
    runs-on: ubuntu-latest #agente que irá rodar o job, neste caso o S.O

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Docker Login
        uses: docker/login-action@v1.10.0
        with:
          username: ${{secrets.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_PWD}}
      - uses: actions/checkout@v2 #pega o codigo do projeto no reposítorio
      - name: build and push a Docker images  #nome a action
        uses: docker/build-push-action@v2.6.1  #modelo de action utilizado (olhar marketplace ao lado)
        with: #determina os parametros que será urtilizado
          context: ./src #path que será enviado ao docker deamon para criar a imagem
          file: ./src/Dockerfile
          push: true
          tags: | #usado o pip para colocar em baixo. Para gerar um número automático de versão, utiliza-se a variável ${{ github.run_number }} , ou seja número exclusivo para cada execução de um fluxo de trabalho específico em um repositório
            murilogomes/rotten-potatoes:latest
            murilogomes/rotten-potatoes:v${{ github.run_number }} 
  CD:
    runs-on: ubuntu-latest #agente que irá rodar o job, neste caso o S.O
    needs: [CI] #a atg "needs" informa ao workflow que para executar o Job CD ele DEPENDE do CI, ou seja, o CI tem que terminar para iniciar o CD 
    steps:
      - uses: actions/checkout@v2
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1.1
        with:
          creds: ${{secrets.AZUREK8S_LOGIN}}
          resource-group: aulaKB2
          cluster-name: k8sAula
      - name: Deploy do Mongo
        uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            k8s/mongodb/deployment.yaml
            k8s/mongodb/service.yaml
      - name: Deploy do AppPython
        uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            k8s/webApp/deployment.yaml
            k8s/webApp/service.yaml
          images: murilogomes/rotten-potatoes:v${{ github.run_number }} 
        

          
